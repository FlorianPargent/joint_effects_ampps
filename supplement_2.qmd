---
title: "Supplement 2: Estimate different causal effects in a hypothetical RCT"
format: html
---

# Introduction of the hypothetical RCT

In our manuscript, we introduce the following hypothetical RCT in the section *Different Estimands in a Longitudinal Study*:

Consider a smartphone study in which participants are randomly assigned to use their smartphone from 8 PM to 10 PM ($t = 1$) or not. No intervention occurs afterward, which means that from 10 PM to midnight ($t = 2$), participants can decide for themselves whether to use their smartphone and this usage is passively recorded. We set $a_t=1$ if there was any smartphone usage during time frame $t$, while $a_t=0$ means that the smartphone was not used at all during $t$. At 10 PM, participants' rumination ($L$) is also measured, as it is hypothesized to be another mediator between smartphone usage and sleep quality. Sleep quality ($Y$), the final outcome of the study, is measured the following morning. @fig-dag presents a DAG corresponding to this RCT.

In [Supplement 1](supplement_1.qmd) we showed how to estimate expected potential outcomes and reproduce *Table 1* in our manuscript. Here in *Supplement 2*, we will demonstrate in R how we can simulate and (try to) estimate different total, joint, and direct causal effects. 

# Demonstration in R

We will use the same DAG and data generating process as in [Supplement 1](supplement_1.qmd), but will repeat all R code here for completeness.

## Load packages

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(dagitty)
library(brms)
library(cmdstanr)
library(tidybayes)
```

## Specify the data generating process

### Draw the DAG

```{r}
#| label: fig-dag
#| fig-cap: DAG that corresponds to an RCT with repeated measurements. $U$ denotes unmeasured confounding, while $L$ and $A_2$ are measured mediators of the causal effect of $A_1$ on the end of study outcome $Y$. Since $A_1$ is randomized, there are no arrows pointing into it.
#| code-fold: true
dag <- dagitty('dag{
  A1 -> L <- U
  A1 -> A2 <- L
  A1 -> Y <- A2
  L -> Y <- U
  A1[pos="0,2"]
  A2[pos="1,2"]
  Y[pos="1.5,1.5"]
  L[pos="0.5,1.5"]
  U[pos="1,1"]
  }')
plot(dag)
```

### Specify the functional relationships

To showcase joint effect estimation, we again simulate a scenario where $U$ affects $A_2$ only through measured $L$. We discuss situations in which this assumption may be plausible in psychological research—induced by *covariate-driven treatment assignment*—in the latter half of the manuscript.

```{r}
b_L_A1 <- 1
b_L_U <- 1
b_A2_A1 <- -3
b_A2_L <- 0.5
b_A2_U <- 0
b_Y_A1 <- -0.1
b_Y_A2 <- -3
b_Y_L <- -1
b_Y_A1A2 <- -0.5
b_Y_U <- -2


f_U <- function(){
  rnorm(n)}
f_A1 <- function(){
  rbinom(n, size = 1, prob = 0.5)}
f_L <- function(A1, U){
  rnorm(n, mean = b_L_A1 * A1 + b_L_U * U)}
f_A2 <- function(A1, L){
  rbinom(n, size = 1, prob = pnorm(b_A2_A1 * A1 + b_A2_L* L + b_A2_U * U))}
f_Y <- function(A1, A2, L, U){
  rnorm(n, mean = 10 + b_Y_A1 * A1 + b_Y_A2 * A2 + b_Y_A1A2 * A1 * A2 + b_Y_L * L +
      b_Y_U * U, sd = 0.1)} 
```

## Determine the true causal effects

We will now simulate various causal effects for our hypothetical RCT:

### Total effect of A1: $E(Y^{a_1=1}) - E(Y^{a_1=0})$

```{r}
n <- 10000000
set.seed(42)

# Y_1: Y^{a_1=1}

U <- f_U()
A1 <- rep(1, n) # intervention
L <- f_L(A1, U)
A2 <- f_A2(A1, L)
Y_1 <- f_Y(A1, A2, L, U)

# Y_0: Y^{a_1=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <- f_L(A1, U)
A2 <- f_A2(A1, L)
Y_0 <- f_Y(A1, A2, L, U)

# E(Y_1) - E(Y_0)
(total_A1 <- mean(Y_1) - mean(Y_0))
```

### Joint effect "always - never": $E(Y^{a_1=1, a_2=1}) - E(Y^{a_1=0, a_2=0})$

```{r}
n <- 10000000
set.seed(42)

# Y_11: Y^{a_1=1, a_2=1}

U <- f_U()
A1 <- rep(1, n) # intervention
L <- f_L(A1, U)
A2 <- rep(1, n) # intervention
Y_11 <- f_Y(A1, A2, L, U)

# Y_00: Y^{a_1=0, a_2=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <- f_L(A1, U)
A2 <-  rep(0, n) # intervention
Y_00 <- f_Y(A1, A2, L, U)

# E(Y_11) - E(Y_00)
(joint_always <- mean(Y_11) - mean(Y_00))
```

### Joint effect "early use": $E(Y^{a_1=1, a_2=0}) - E(Y^{a_1=0, a_2=0})$

```{r}
n <- 10000000
set.seed(42)

# Y_10: Y^{a_1=1, a_2=0}

U <- f_U()
A1 <- rep(1, n) # intervention
L <- f_L(A1, U)
A2 <- rep(0, n) # intervention
Y_10 <- f_Y(A1, A2, L, U)

# Y_00: Y^{a_1=0, a_2=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <- f_L(A1, U)
A2 <- rep(0, n) # intervention
Y_00 <- f_Y(A1, A2, L, U)

# E(Y_10) - E(Y_00)
(joint_early <- mean(Y_10) - mean(Y_00))
```


### Joint effect "late use": $E(Y^{a_1=0, a_2=1}) - E(Y^{a_1=0, a_2=0})$

```{r}
n <- 10000000
set.seed(42)

# Y_01: Y^{a_1=0, a_2=1}

U <- f_U()
A1 <- rep(0, n) # intervention
L <- f_L(A1, U)
A2 <- rep(1, n) # intervention
Y_10 <- f_Y(A1, A2, L, U)

# Y_00: Y^{a_1=0, a_2=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <- f_L(A1, U)
A2 <- rep(0, n) # intervention
Y_00 <- f_Y(A1, A2, L, U)

# E(Y_01) - E(Y_00)
(joint_late <- mean(Y_10) - mean(Y_00))
```

### Direct effect "always - never": $E(Y^{a_1=1, L^{a_1=0}, a_2=1}) - E(Y^{a_1=0, L^{a_1=0}, a_2=0})$

```{r}
n <- 10000000
set.seed(42)

# Y_10: Y^{a_1=1, L^{a_1=0}, a_2=1}

U <- f_U()
A1 <- rep(1, n) # intervention
L <- f_L(A1 = rep(0, n), U)
A2 <- rep(1, n) # intervention
Y_10 <- f_Y(A1, A2, L, U)

# Y_00: Y^{a_1=0, L^{a_1=0}, a_2=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <-  f_L(A1, U)
A2 <-  rep(0, n) # intervention
Y_00 <- f_Y(A1, A2, L, U)

# E(Y_10) - E(Y_00)
(direct_always <- mean(Y_10) - mean(Y_00))
```

### Direct effect "early use": $E(Y^{a_1=1, L^{a_1=0}, a_2=0}) - E(Y^{a_1=0, L^{a_1=0}, a_2=0})$

```{r}
n <- 10000000
set.seed(42)

# Y_10: Y^{a_1=1, L^{a_1=0}, a_2=0}

U <- f_U()
A1 <- rep(1, n) # intervention
L <- f_L(A1 = rep(0, n), U)
A2 <- rep(0, n) # intervention
Y_10 <- f_Y(A1, A2, L, U)

# Y_00: Y^{a_1=0, L^{a_1=0}, a_2=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <-  f_L(A1, U)
A2 <-  rep(0, n) # intervention
Y_00 <- f_Y(A1, A2, L, U)

# E(Y_10) - E(Y_00)
(direct_early <- mean(Y_10) - mean(Y_00))
```

### Direct effect "late use": $E(Y^{a_1=0, L^{a_1=0}, a_2=0}) - E(Y^{a_1=0, L^{a_1=0}, a_2=1})$

```{r}
n <- 10000000
set.seed(42)

# Y_01: Y^{a_1=0, L^{a_1=0}, a_2=1}

U <- f_U()
A1 <- rep(0, n) # intervention
L <- f_L(A1, U)
A2 <- rep(1, n) # intervention
Y_01 <- f_Y(A1, A2, L, U)

# Y_00: Y^{a_1=0, L^{a_1=0}, a_2=0}

U <- f_U()
A1 <- rep(0, n) # intervention
L <-  f_L(A1, U)
A2 <-  rep(0, n) # intervention
Y_00 <- f_Y(A1, A2, L, U)

# E(Y_01) - E(Y_00)
(direct_late <- mean(Y_01) - mean(Y_00))
```


### Direct effect of A1: $E(Y^{a_1=1, L^{a_1=0}, A_2^{a_1=0, L^{a_1=0}}}) - E(Y^{a_1=0, L^{a_1=0}, A_2^{a_1=0, L^{a_1=0}}})$

```{r}
n <- 10000000
set.seed(42)

# Y_1: Y^{a_1=1, L^{a_1=0}, A_2^{a_1=0, L^{a_1=0}}}

U <- f_U()
A1 <- rep(1, n) # intervention
L <- f_L(A1 = rep(0, n), U)
A2 <- f_A2(A1 = rep(0, n), L)
Y_1 <- f_Y(A1, A2, L, U)

# Y_0: Y^{a_1=0, L^{a_1=0}, A_2^{a_1=0, L^{a_1=0}}}

U <- f_U()
A1 <- rep(0, n) # intervention
L <-  f_L(A1, U)
A2 <- f_A2(A1, L)
Y_0 <- f_Y(A1, A2, L, U)

# E(Y_1) - E(Y_0)
(direct_A1 <- mean(Y_1) - mean(Y_0))
```


## Simulate a sample dataset

```{r}
n <- 2000
set.seed(42)

U <- f_U()
A1 <- f_A1()
L <- f_L(A1, U)
A2 <- f_A2(A1, L)
Y <- f_Y(A1, A2, L, U)

dat <- data.frame(A1, A2, L, Y)
```

## Fit statistical models with brms

In the hypothetical RCT, there was no randomization at $t = 2$. However, we can still estimate causal effects using our knowledge of the DAG. Causal effects can be retrieved under the assumptions of consistency, exchangeability, and positivity.

Different statistical models are required to estimate various total, joint, and direct effects. To estimate the joint effect, we ensure exchangeability by leveraging the property that, given $L$ and $A_1$, $A_2$ is independent of $U$: $P(A_2 = a_2 | A_1, L, U) = P(A_2 = a_2 | A_1, L)$.


```{r}
#| message: false

set.seed(42)
fit_total <- brm(Y ~ A1,
  data = dat, chains = 4, cores = 4, backend = "cmdstanr", refresh = 0)
summary(fit_total)

set.seed(42)
bf_L <- bf(L ~ A1)
bf_Y <- bf(Y ~ A1 + A2 + A1:A2 + L)
fit_joint <- brm(bf_L + bf_Y + set_rescor(FALSE),
  data = dat, chains = 4, cores = 4, backend = "cmdstanr", refresh = 0)
summary(fit_joint)

set.seed(42)
bf_L <- bf(L ~ A1)
bf_A2 <- bf(A2 ~ A1 + L, family = bernoulli(link = probit))
bf_Y <- bf(Y ~ A1 + A2 + A1:A2 + L)
fit_direct <- brm(bf_L + bf_A2 + bf_Y + set_rescor(FALSE),
  data = dat, chains = 4, cores = 4, backend = "cmdstanr", refresh = 0)
summary(fit_direct)
```

## Estimate the causal effects

```{r}
params_total <- tidy_draws(fit_total)
params_joint <- tidy_draws(fit_joint)
params_direct <- tidy_draws(fit_direct)
N <- 10000

# total effect A1
total_A1_est <- params_total |> 
  group_by(.draw) |>
  mutate(
    E_Y_1 = {
      a1 <- rep(1, N)
      y <- rnorm(N, b_Intercept + b_A1 * a1, sd = sigma)
      mean(y)},
    E_Y_0 = {
      a1 <- rep(0, N)
      y <- rnorm(N, b_Intercept + b_A1 * a1, sd = sigma)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_1 - E_Y_0) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# joint effect always - never
joint_always_est <- params_joint |> 
  group_by(.draw) |>
  mutate(
    E_Y_11 = {
      a1 <- rep(1, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(1, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_00 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_11 - E_Y_00) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# joint effect early use
joint_early_est <- params_joint |> 
  group_by(.draw) |>
  mutate(
    E_Y_10 = {
      a1 <- rep(1, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_00 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_10 - E_Y_00) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# joint effect late use
joint_late_est <- params_joint |> 
  group_by(.draw) |>
  mutate(
    E_Y_01 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(1, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_00 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_01 - E_Y_00) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# direct effect always - never
direct_always_est <- params_joint |> 
  group_by(.draw) |>
  mutate(
    E_Y_11 = {
      a1 <- rep(1, N)
      a1_0 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1_0, sd = sigma_L)
      a2 <- rep(1, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_00 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_11 - E_Y_00) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# direct effect early use
direct_early_est <- params_joint |> 
  group_by(.draw) |>
  mutate(
    E_Y_10 = {
      a1 <- rep(1, N)
      a1_0 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1_0, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_00 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_10 - E_Y_00) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# direct effect late use
direct_late_est <- params_joint |> 
  group_by(.draw) |>
  mutate(
    E_Y_01 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(1, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_00 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rep(0, N)
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_01 - E_Y_00) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()

# direct effect A1
direct_A1_est <- params_direct |> 
  group_by(.draw) |>
  mutate(
    E_Y_1 = {
      a1 <- rep(1, N)
      a1_0 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1_0, sd = sigma_L)
      a2 <- rbinom(N, size = 1, prob = pnorm(b_A2_Intercept + b_A2_A1 * a1_0 + b_A2_L * l))
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)},
    E_Y_0 = {
      a1 <- rep(0, N)
      l <- rnorm(N, b_L_Intercept + b_L_A1 * a1, sd = sigma_L)
      a2 <- rbinom(N, size = 1, prob = pnorm(b_A2_Intercept + b_A2_A1 * a1 + b_A2_L * l))
      y <- rnorm(N, b_Y_Intercept + b_Y_A1 * a1 + b_Y_A2 * a2 + `b_Y_A1:A2` * a1 * a2 +
          b_Y_L * l, sd = sigma_Y)
      mean(y)}) |>
  mutate(E_Y_diff = E_Y_1 - E_Y_0) |>
  ungroup() |> select(E_Y_diff) |>
  summarise_draws()
```


# Compare the true causal effects with their empirical estimates

```{r}
#| code-fold: true

table <- tribble(
 ~"causal effect"               ,~"true effect" ,~"estimate (med)"        ,~"ci (q5)"           ,~"ci (q95)",
  "total effect A1"             , total_A1      , total_A1_est$median     , total_A1_est$q5     , total_A1_est$q95     ,
  "joint effect always - never" , joint_always  , joint_always_est$median , joint_always_est$q5 , joint_always_est$q95 ,
  "joint effect early use"      , joint_early   , joint_early_est$median  , joint_early_est$q5  , joint_early_est$q95  ,
  "joint effect late use"       , joint_late    , joint_late_est$median   , joint_late_est$q5   , joint_late_est$q95   ,
  "direct effect always - never", direct_always , direct_always_est$median, direct_always_est$q5, direct_always_est$q95,
  "direct effect early use"     , direct_early  , direct_early_est$median , direct_early_est$q5 , direct_early_est$q95 ,
  "direct effect late use"      , direct_late   , direct_late_est$median  , direct_late_est$q5  , direct_late_est$q95  ,
  "direct effect A1"            , direct_A1     , direct_A1_est$median    , direct_A1_est$q5    , direct_A1_est$q95    ,

)
knitr::kable(table)
```

Note that the total and joint effects are estimated without bias, while the direct effects are biased because of the unobserved confounder $U$ (except for the direct effect of "late use", which for our data generating process is equal to the joint effect of "late use").

